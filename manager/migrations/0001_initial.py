# Generated by Django 4.1.5 on 2023-01-10 04:42

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'CustomerSource',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('cost', models.CharField(default='00,000.00', max_length=16)),
            ],
            options={
                'db_table': 'Service',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('humanID', models.CharField(blank=True, default=None, max_length=12, null=True, unique=True)),
                ('gender', models.CharField(choices=[('nam', 'NAM'), ('nữ', 'NỮ'), ('khác', 'KHÁC')], max_length=10)),
                ('fullname', models.CharField(max_length=50)),
                ('dob', models.DateField(blank=True, max_length=10, null=True)),
                ('mobile', models.CharField(max_length=16, unique=True)),
                ('email', models.EmailField(blank=True, max_length=125, null=True)),
                ('address', models.TextField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(choices=[('english', 'ENGLISH'), ('tiếng việt', 'TIẾNG VIỆT'), ('french', 'FRENCH')], default='english', max_length=10)),
                ('nubank', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('bank', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('salary', models.CharField(default='00,000.00', max_length=16)),
                ('thumb', models.ImageField(blank=True, null=True, upload_to='Employee')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.department')),
            ],
            options={
                'db_table': 'Employee',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('humanID', models.CharField(blank=True, default=None, max_length=12, null=True, unique=True)),
                ('gender', models.CharField(choices=[('nam', 'NAM'), ('nữ', 'NỮ'), ('khác', 'KHÁC')], max_length=10)),
                ('fullname', models.CharField(max_length=50)),
                ('dob', models.DateField(blank=True, max_length=10, null=True)),
                ('mobile', models.CharField(max_length=16, unique=True)),
                ('email', models.EmailField(blank=True, max_length=125, null=True)),
                ('address', models.TextField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(choices=[('english', 'ENGLISH'), ('tiếng việt', 'TIẾNG VIỆT'), ('french', 'FRENCH')], default='english', max_length=10)),
                ('nubank', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('bank', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('yob', models.IntegerField()),
                ('thumb', models.ImageField(blank=True, null=True, upload_to='Customer')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.customersource')),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fullname', models.CharField(max_length=32)),
                ('thumb', models.ImageField(blank=True, null=True, upload_to='User')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
